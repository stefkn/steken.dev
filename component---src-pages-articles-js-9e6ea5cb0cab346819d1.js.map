{"version":3,"sources":["webpack:///./src/components/common/PostLink.js","webpack:///./src/pages/articles.js"],"names":["PostLink","post","coverImage","PostEntry","to","frontmatter","slug","className","fluid","childImageSharp","date","title","excerpt","reading_time","styled","div","props","theme","font","primary","Articles","selectNoTags","setState","selectedTag","state","selectTag","tag","this","that","setTimeout","articleIsTagged","article","node","tags","split","indexOf","isArticlePublished","published","addToTagList","accumulator","push","console","log","isSameImageName","image","coverImageName","originalName","getCoverImage","allImages","filteredImages","filter","length","render","query","queryResult","mdArticles","allMarkdownRemark","edges","coverImages","allFile","Posts","style","marginTop","Tags","map","key","id","cover_image","reduce","currentValue","forEach","TagButton","onClick","Layout","Navbar","isAtTopOfPage","MainMatter","TagsButtonContainer","PostsContainer","Footer","bottomImage","Component","button","screen","md"],"mappings":"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","file":"component---src-pages-articles-js-9e6ea5cb0cab346819d1.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\n\nconst PostLink = ({ post, coverImage }) => (\n  <PostEntry>\n    {(coverImage) &&\n      <Link to={post.frontmatter.slug}>\n        <Img className=\"cover-image\" fluid={coverImage.childImageSharp.fluid} />\n      </Link>\n    }\n    <div className=\"post-date\">{post.frontmatter.date}</div>\n    <h3 className=\"subtitle-main\">\n        <Link to={post.frontmatter.slug}>\n          {post.frontmatter.title}\n        </Link>\n    </h3>\n    <p className=\"excerpt\">{post.frontmatter.excerpt}</p>\n    <p className=\"read-more\"><Link to={post.frontmatter.slug}>Read more... ({post.frontmatter.reading_time} min read)</Link></p>\n  </PostEntry>\n)\n\nexport default PostLink\n\nconst PostEntry = styled.div`\n  margin-top: 2em;\n  margin-bottom: 2em;\n\n  .cover-image {\n    border-radius: 6px;\n    margin: 4px;\n  }\n\n  h3 {\n    color: #2f39ae !important;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 600;\n  }\n\n  a:-webkit-any-link {\n    color: #2f39ae;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  p.excerpt {\n    font-size: clamp(1.5rem, 2.5vw, 2rem);\n    line-height: 1.3328;\n  }\n\n  .post-date {\n    font-size: 16px;\n    color: #2f39ae;\n  }\n\n  .read-more {\n    font-size: 16px;\n    color: #2f39ae;\n  }\n\n  width: 100%;\n  background-color: rgb(236 235 255);\n  box-shadow: -1px 4px 14px 3px #aeb4ff75;\n  border-radius: 9px;\n  padding: 22px;\n\n  animation-delay: 0s;\n  animation: animatetext 1s;\n  animation-fill-mode: forwards;\n\n  @keyframes animatetext {\n    0% { transform: translate3d(0, 10%, 0); opacity: 0%;}\n    100% { transform: translate3d(0, 0, 0); opacity: 100%;}\n  `;","import React, { Component } from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '@common/Layout';\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Footer from '@sections/Footer';\nimport Navbar from '@common/Navbar';\n\nimport styled from 'styled-components';\nimport PostLink from \"../components/common/PostLink\"\nimport { Container } from '@components/global';\n\n\nclass Articles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {selectedTag: ''};\n  }\n\n  selectTag(tag) {\n    this.setState({selectedTag: 'nothing'});\n    let that = this;\n\n    setTimeout( function() {\n      that.setState({selectedTag: tag});\n    }, 1);\n  }\n\n  selectNoTags = () => {\n    this.setState({selectedTag: ''})\n  };\n\n  articleIsTagged(tag, article) {\n    if (tag === '' || tag === 'All articles') {\n      return true;\n    } else {\n      return article.node.frontmatter.tags.split(' ').indexOf(tag) === -1 ? false : true;\n    }\n  }\n\n  isArticlePublished(article) {\n    return article.node.frontmatter.published\n  }\n\n  addToTagList(tag, accumulator) {\n    if (accumulator) {\n      accumulator.indexOf(tag) === -1 ? accumulator.push(tag) : console.log(\"This item already exists: \" + tag);\n    }\n  }\n\n  isSameImageName(image, coverImageName) {\n    return image.node.childImageSharp.fluid.originalName === coverImageName\n  }\n\n  getCoverImage(allImages, coverImageName) {\n    let filteredImages = allImages.filter(image => this.isSameImageName(image, coverImageName))\n    // if multiple are matched, return the first one\n    return (filteredImages.length > 0) ? filteredImages[0].node : null\n  }\n\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query\n          {\n            allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    date(formatString: \"MMMM DD, YYYY\")\n                    slug\n                    title\n                    tags\n                    published\n                    excerpt\n                    reading_time\n                    cover_image\n                  }\n                }\n              }\n            }\n            allFile(filter: {sourceInstanceName: {eq: \"article_images\"}}) {\n              edges {\n                node {\n                  childImageSharp {\n                    fluid(maxWidth: 1200) {\n                      originalName\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={queryResult => {\n          const mdArticles = queryResult.allMarkdownRemark.edges\n            .filter(article => this.isArticlePublished(article))\n\n          const reducer = (accumulator, currentValue) => {\n            currentValue.forEach((tag) => this.addToTagList(tag, accumulator));\n            return accumulator\n          }\n\n          const coverImages = queryResult.allFile.edges\n          let Posts = <div style={{marginTop: '1em'}}>No posts. Watch this space! 👽</div>;\n          let Tags = <div style={{marginTop: '1em'}}>No tags. #sadface  💁‍♀️</div>;\n\n          if (!!mdArticles && mdArticles.length > 0) {\n            Posts = mdArticles\n              .filter(article => this.articleIsTagged(this.state.selectedTag, article))\n              .map(article => <PostLink key={article.node.id} post={article.node} coverImage={this.getCoverImage(coverImages, article.node.frontmatter.cover_image)} />)\n            Tags = mdArticles\n              .map(article => article.node.frontmatter.tags.split(' '))\n              .reduce(reducer, mdArticles ? ['All articles'] : ['No tags yet.'])\n              .map(tag => <TagButton className={this.state.selectedTag === tag ? 'selelcted-tag-button': null} key={tag} onClick={() => this.selectTag(tag)} > {tag} </TagButton>)\n          }\n\n          return (\n          <Layout>\n            <Navbar isAtTopOfPage={true} />\n            <Container>\n              <MainMatter>\n                <h1>Articles</h1>\n                <p>filter by topic:</p>\n                <TagsButtonContainer>{Tags}</TagsButtonContainer>\n                <PostsContainer>{Posts}</PostsContainer>\n              </MainMatter>\n            </Container>\n            <Footer bottomImage={false}/>\n          </Layout>\n          )\n        }}\n      />\n    )\n  }\n}\n\n\nconst TagsButtonContainer = styled.div`\n  margin-top: 1em;\n`\nconst PostsContainer = styled.div`\n\n`\nconst TagButton = styled.button`\n  animation-delay: 0s;\n  animation: animatetext 1s;\n  animation-fill-mode: forwards;\n\n  background-color: #2f39ae;\n  border-radius: 100px;\n  padding: 11px;\n  color: white;\n  margin: 3px;\n  box-shadow: -4px 5px 8px 0px #2f39ae75;\n\n  @keyframes animatetext {\n    0% { transform: translate3d(0, 10%, 0); opacity: 0%;}\n    100% { transform: translate3d(0, 0, 0); opacity: 100%;}\n  }\n`\n\nconst MainMatter = styled.div`\n  padding-top: 10em;\n  padding-bottom: 10em;\n  min-height: 100vh;\n\n  @keyframes animatetext {\n    0% { transform: translate3d(0, 10%, 0); opacity: 0%;}\n    100% { transform: translate3d(0, 0, 0); opacity: 100%;}\n  }\n\n  @media (max-width: ${props => props.theme.screen.md}) {\n    padding-top: 10em;\n    grid-template-columns: 1fr;\n    text-align: left;\n  }\n\n  h1 {\n    line-height: 1.3328;\n    font-size: clamp(4.6rem, 12vw - 1.5rem, 6.5rem);\n\n    animation-delay: 0s;\n    animation: animatetext 1s;\n    animation-fill-mode: forwards;\n  }\n\n  h3 {\n    line-height: 1.3328;\n    font-size: clamp(2.0rem, 12vw - 1.5rem, 3.2rem);\n\n    animation-delay: 1s;\n    animation: animatetext 2s;\n    animation-fill-mode: forwards;\n  }\n\n  p {\n    font-size: clamp(1.6rem, 12vw - 1.5rem, 2.0rem);\n    overflow-wrap: break-word;\n    -webkit-font-smoothing: antialiased;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 300;\n    font-style: normal;\n    letter-spacing: -.02em;\n    text-transform: none;\n    line-height: 1.3328;\n    margin-top: 2em;\n    margin-bottom: 0;\n    white-space: pre-wrap;\n    margin-top: 1em;\n\n    animation-delay: 2s;\n    animation: animatetext 2s;\n    animation-fill-mode: forwards;\n  }\n`;\n\nexport default Articles;\n"],"sourceRoot":""}
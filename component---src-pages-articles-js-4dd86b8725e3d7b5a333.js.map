{"version":3,"sources":["webpack:///./src/components/common/PostLink.js","webpack:///./src/pages/articles.js"],"names":["PostLink","post","coverImage","PostEntry","to","frontmatter","slug","className","fluid","childImageSharp","date","title","excerpt","reading_time","styled","div","props","theme","font","primary","Articles","selectNoTags","setState","selectedTag","state","selectedSeries","selectTag","tag","this","that","setTimeout","selectSeries","series","articleIsTagged","article","node","tags","split","indexOf","articleIsInSeries","isArticlePublished","published","addToTagList","accumulator","push","console","log","addToSeriesList","isSameImageName","image","coverImageName","originalName","getCoverImage","allImages","filteredImages","filter","length","render","query","queryResult","mdArticles","articles","edges","coverImages","articleImages","seriesImages","Posts","style","marginTop","Tags","Series","display","map","key","id","cover_image","reduce","currentValue","seriesData","SeriesCard","onClick","imageName","description","forEach","TagButton","Layout","Navbar","isAtTopOfPage","HeroImage","HeroOverlay","stefan_img","MainMatter","TagsButtonContainer","Object","keys","SeriesContainer","PostsContainer","Footer","bottomImage","Component","button","screen","md"],"mappings":"kOAyBeA,EApBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAT,OACf,kBAACC,EAAD,KACID,GACA,kBAAC,OAAD,CAAME,GAAIH,EAAKI,YAAYC,MACzB,kBAAC,IAAD,CAAKC,UAAU,cAAcC,MAAON,EAAWO,gBAAgBD,SAGnE,yBAAKD,UAAU,gBACb,yBAAKA,UAAU,aAAaN,EAAKI,YAAYK,MAC7C,wBAAIH,UAAU,iBACV,kBAAC,OAAD,CAAMH,GAAIH,EAAKI,YAAYC,MACxBL,EAAKI,YAAYM,QAGxB,uBAAGJ,UAAU,WAAWN,EAAKI,YAAYO,SACzC,uBAAGL,UAAU,aAAY,kBAAC,OAAD,CAAMH,GAAIH,EAAKI,YAAYC,MAA3B,iBAAgDL,EAAKI,YAAYQ,aAAjE,kBAOzBV,EAAYW,IAAOC,IAAV,0EAAGD,CAAH,qhDAWI,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,KAAKC,W,YCxBvCC,E,YACJ,WAAYJ,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAwBFK,aAAe,WACb,EAAKC,SAAS,CAACC,YAAa,MAxB5B,EAAKC,MAAQ,CAACD,YAAa,GAAIE,eAAgB,IAF9B,E,4CAKnBC,UAAA,SAAUC,GACRC,KAAKN,SAAS,CAACC,YAAa,YAC5BK,KAAKN,SAAS,CAACG,eAAgB,YAC/B,IAAII,EAAOD,KAEXE,YAAY,WACVD,EAAKP,SAAS,CAACC,YAAaI,MAC3B,I,EAGLI,aAAA,SAAaC,GACXJ,KAAKN,SAAS,CAACC,YAAa,YAC5BK,KAAKN,SAAS,CAACG,eAAgB,YAC/B,IAAII,EAAOD,KAEXE,YAAY,WACVD,EAAKP,SAAS,CAACG,eAAgBO,MAC9B,I,EAOLC,gBAAA,SAAgBN,EAAKO,GACnB,MAAY,KAARP,GAAsB,iBAARA,IAGkD,IAA3DO,EAAQC,KAAK9B,YAAY+B,KAAKC,MAAM,KAAKC,QAAQX,I,EAI5DY,kBAAA,SAAkBP,EAAQE,GACxB,MAAe,KAAXF,GAA4B,iBAAXA,GAGZE,EAAQC,KAAK9B,YAAY2B,SAAWA,G,EAI/CQ,mBAAA,SAAmBN,GACjB,OAAOA,EAAQC,KAAK9B,YAAYoC,W,EAGlCC,aAAA,SAAaf,EAAKgB,GACZA,KAC4B,IAA9BA,EAAYL,QAAQX,GAAcgB,EAAYC,KAAKjB,GAAOkB,QAAQC,IAAI,6BAA+BnB,K,EAIzGoB,gBAAA,SAAgBf,EAAQW,GAClBA,KAC+B,IAAjCA,EAAYL,QAAQN,GAAiBW,EAAYC,KAAKZ,GAAUa,QAAQC,IAAI,6BAA+Bd,K,EAI/GgB,gBAAA,SAAgBC,EAAOC,GACrB,OAAOD,EAAMd,KAAK1B,gBAAgBD,MAAM2C,eAAiBD,G,EAG3DE,cAAA,SAAcC,EAAWH,GAAiB,IAAD,OACnCI,EAAiBD,EAAUE,QAAO,SAAAN,GAAK,OAAI,EAAKD,gBAAgBC,EAAOC,MAE3E,OAAQI,EAAeE,OAAS,EAAKF,EAAe,GAAGnB,KAAO,M,EAGhEsB,OAAA,WAAU,IAAD,OACP,OACE,kBAAC,cAAD,CACEC,MAAK,WAyDLD,OAAQ,SAAAE,GACN,IAAMC,EAAaD,EAAYE,SAASC,MACrCP,QAAO,SAAArB,GAAO,OAAI,EAAKM,mBAAmBN,MAcvC6B,EAAcJ,EAAYK,cAAcF,MACxCG,EAAeN,EAAYM,aAAaH,MAE1CI,EAAQ,yBAAKC,MAAO,CAACC,UAAW,QAAxB,+BACRC,EAAO,yBAAKF,MAAO,CAACC,UAAW,QAAxB,gBACPE,EAAS,yBAAKH,MAAO,CAACI,QAAS,UAmFnC,OAjFMX,GAAcA,EAAWJ,OAAS,IACtCU,EAAQN,EACLL,QACC,SAAArB,GAAO,OACP,EAAKD,gBACH,EAAKT,MAAMD,YACXW,IACG,EAAKK,kBACR,EAAKf,MAAMC,eACXS,MAGHsC,KACC,SAAAtC,GAAO,OACP,kBAAC,EAAD,CACEuC,IAAKvC,EAAQC,KAAKuC,GAClBzE,KAAMiC,EAAQC,KACdjC,WACE,EAAKkD,cACHW,EACA7B,EAAQC,KAAK9B,YAAYsE,kBAMnCL,EAASV,EACNgB,QAzCiB,SAACjC,EAAakC,GAIlC,OAHMA,GACJ,EAAK9B,gBAAgB8B,EAAa1C,KAAK9B,YAAY2B,OAAQW,GAEtDA,IAqCkB,IACtB6B,KACC,SAAAxC,GAAM,OACJ8C,EAAW9C,GACX,kBAAC+C,EAAD,CACExE,UACE,EAAKiB,MAAMC,iBAAmBO,EAAS,wBAAyB,KAElEyC,IAAKzC,EACLgD,QAAS,kBAAM,EAAKjD,aAAaC,KAEjC,wBAAIzB,UAAU,sBAAd,UACA,4BAAKyB,GAKG,OAHN,EAAKoB,cACHa,EACAa,EAAW9C,GAAQiD,YAEnB,kBAAC,IAAD,CACER,IAAKzC,EACLzB,UAAU,eACVC,MACE,EAAK4C,cACHa,EACAa,EAAW9C,GAAQiD,WACnBxE,gBAAgBD,QAI1B,yBAAKD,UAAU,sBACb,2BAAIuE,EAAW9C,GAAQkD,eAEX,QAGtBb,EAAOT,EACJY,KACC,SAAAtC,GAAO,OAAIA,EAAQC,KAAK9B,YAAY+B,KAAKC,MAAM,QAEhDuC,QArFW,SAACjC,EAAakC,GAE5B,OADAA,EAAaM,SAAQ,SAACxD,GAAD,OAAS,EAAKe,aAAaf,EAAKgB,MAC9CA,IAoFMiB,EAAa,CAAC,gBAAkB,CAAC,iBAE3CY,KACC,SAAA7C,GAAG,OACH,kBAACyD,EAAD,CACE7E,UACE,EAAKiB,MAAMD,cAAgBI,EAAM,uBAAyB,KAE5D8C,IAAK9C,EACLqD,QAAS,kBAAM,EAAKtD,UAAUC,KALhC,IAKyCA,OAM/C,kBAAC0D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,eAAe,IACvB,kBAACC,EAAD,KACE,kBAACC,EAAD,MACA,kBAAC,IAAD,CAAKjF,MAAOmD,EAAY+B,WAAWjF,gBAAgBD,SAErD,kBAAC,IAAD,KACE,kBAACmF,EAAD,KACE,wCAEA,+CACA,kBAACC,EAAD,KAAsBvB,KAEjBC,KAAYQ,GAAiD,IAAnCe,OAAOC,KAAKhB,GAAYtB,QAAiB,4CACxE,kBAACuC,EAAD,KAAkBzB,GAElB,kBAAC0B,EAAD,KAAiB9B,KAGrB,kBAAC+B,EAAA,EAAD,CAAQC,aAAa,S,GAhQVC,aAyRjBrB,EAAa,GAEbW,EAAc3E,IAAOC,IAAV,2EAAGD,CAAH,mKAcX0E,EAAY1E,IAAOC,IAAV,yEAAGD,CAAH,iHAUTiF,EAAkBjF,IAAOC,IAAV,+EAAGD,CAAH,0RAafiE,EAAajE,IAAOC,IAAV,0EAAGD,CAAH,6lCA+DV8E,EAAsB9E,IAAOC,IAAV,mFAAGD,CAAH,qBAInBkF,EAAiBlF,IAAOC,IAAV,8EAAGD,CAAH,iGAQdsE,EAAYtE,IAAOsF,OAAV,yEAAGtF,CAAH,4TAkBT6E,EAAa7E,IAAOC,IAAV,0EAAGD,CAAH,4iCAUO,SAAAE,GAAK,OAAIA,EAAMC,MAAMoF,OAAOC,MA4BhC,SAAAtF,GAAK,OAAIA,EAAMC,MAAMC,KAAKC,WA+B9BC","file":"component---src-pages-articles-js-4dd86b8725e3d7b5a333.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\n\nconst PostLink = ({ post, coverImage }) => (\n  <PostEntry>\n    {(coverImage) &&\n      <Link to={post.frontmatter.slug}>\n        <Img className=\"cover-image\" fluid={coverImage.childImageSharp.fluid} />\n      </Link>\n    }\n    <div className=\"text-content\">\n      <div className=\"post-date\">{post.frontmatter.date}</div>\n      <h3 className=\"subtitle-main\">\n          <Link to={post.frontmatter.slug}>\n            {post.frontmatter.title}\n          </Link>\n      </h3>\n      <p className=\"excerpt\">{post.frontmatter.excerpt}</p>\n      <p className=\"read-more\"><Link to={post.frontmatter.slug}>Read more... ({post.frontmatter.reading_time} min read)</Link></p>\n    </div>\n  </PostEntry>\n)\n\nexport default PostLink\n\nconst PostEntry = styled.div`\n  margin-top: 2em;\n  margin-bottom: 2em;\n\n  .cover-image {\n    border-radius: 6px;\n    margin: 4px;\n  }\n\n  h3 {\n    color: white !important;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 600;\n    font-size: clamp(1.5rem, 2.5vw, 2rem);\n  }\n\n  a:-webkit-any-link {\n    color: white;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  p.excerpt {\n    font-size: clamp(1.4rem, 2.5vw, 1.6rem);\n    line-height: 1.3328;\n    color: #1a191d;\n    font-weight: 400;\n  }\n\n  .post-date {\n    font-size: 16px;\n    color: white;\n  }\n\n  .read-more {\n    background: #293aff;\n    border-radius: 10px;\n    padding: 6px;\n    text-align: center;\n    max-width: 260px;\n    font-size: 16px;\n    font-weight: 600;\n    color: white;\n    position: relative;\n    cursor: pointer;\n    border: 1px solid rgba(198, 203, 255, 39%);\n  }\n  .read-more:hover {\n    bottom: 1px;\n    box-shadow: 6px 5px 20px 0px rgba(255, 0, 106, 53%);\n  }\n\n  .text-content {\n    position: relative;\n    border-radius: 30px;\n    padding: 30px 5px;\n    border: 1pxsolidrgba(198,203,255,39%);\n    box-shadow: 7px 13px 20px 0pxrgba(255,183,213,62%);\n    top: 4px;\n  }\n\n  @media (max-width: 720px) {\n    width: 100%;\n  }\n\n  width: 46%;\n  margin: 2%;\n  padding: 22px;\n\n  animation-delay: 0s;\n  animation: animatetext 1s;\n  animation-fill-mode: forwards;\n\n  @keyframes animatetext {\n    0% { transform: translate3d(0, 10%, 0); opacity: 0%;}\n    100% { transform: translate3d(0, 0, 0); opacity: 100%;}\n  }\n\n  background-image: linear-gradient(\n    155deg,\n    hsl(223deg 70% 42%) 0%,\n    hsl(252deg 40% 52%) 13%,\n    hsl(272deg 37% 55%) 24%,\n    hsl(291deg 33% 58%) 35%,\n    hsl(310deg 35% 64%) 46%,\n    hsl(324deg 44% 72%) 57%,\n    hsl(335deg 51% 79%) 67%,\n    hsl(344deg 59% 86%) 78%,\n    hsl(352deg 65% 93%) 89%,\n    hsl(0deg 75% 98%) 100%\n  );\n\n  box-shadow: 4px 6px 16px 0px rgb(0 16 255 / 16%);\n  backdrop-filter: hue-rotate(10deg) blur(4px);\n  -webkit-backdrop-filter: blur( 7.5px );\n  border-radius: 10px;\n  border: 1px solid rgb(232 234 255);\n  `;","import React, { Component } from 'react';\n\nimport Layout from '@common/Layout';\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image';\n\nimport Footer from '@sections/Footer';\nimport Navbar from '@common/Navbar';\n\nimport styled from 'styled-components';\nimport PostLink from \"../components/common/PostLink\"\nimport { Container } from '@components/global';\n\n\nclass Articles extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {selectedTag: '', selectedSeries: ''};\n  }\n\n  selectTag(tag) {\n    this.setState({selectedTag: 'nothing'});\n    this.setState({selectedSeries: 'nothing'});\n    let that = this;\n\n    setTimeout( function() {\n      that.setState({selectedTag: tag});\n    }, 1);\n  }\n\n  selectSeries(series) {\n    this.setState({selectedTag: 'nothing'});\n    this.setState({selectedSeries: 'nothing'});\n    let that = this;\n\n    setTimeout( function() {\n      that.setState({selectedSeries: series});\n    }, 1);\n  }\n\n  selectNoTags = () => {\n    this.setState({selectedTag: ''});\n  }\n\n  articleIsTagged(tag, article) {\n    if (tag === '' || tag === 'All articles') {\n      return true;\n    } else {\n      return article.node.frontmatter.tags.split(' ').indexOf(tag) === -1 ? false : true;\n    }\n  }\n\n  articleIsInSeries(series, article) {\n    if (series === '' || series === 'All articles') {\n      return true;\n    } else {\n      return article.node.frontmatter.series === series ? true : false;\n    }\n  }\n\n  isArticlePublished(article) {\n    return article.node.frontmatter.published\n  }\n\n  addToTagList(tag, accumulator) {\n    if (accumulator) {\n      accumulator.indexOf(tag) === -1 ? accumulator.push(tag) : console.log(\"This item already exists: \" + tag);\n    }\n  }\n\n  addToSeriesList(series, accumulator) {\n    if (accumulator) {\n      accumulator.indexOf(series) === -1 ? accumulator.push(series) : console.log(\"This item already exists: \" + series);\n    }\n  }\n\n  isSameImageName(image, coverImageName) {\n    return image.node.childImageSharp.fluid.originalName === coverImageName\n  }\n\n  getCoverImage(allImages, coverImageName) {\n    let filteredImages = allImages.filter(image => this.isSameImageName(image, coverImageName))\n    // if multiple are matched, return the first one\n    return (filteredImages.length > 0) ? filteredImages[0].node : null\n  }\n\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query\n          {\n            stefan_img: file(\n              sourceInstanceName: { eq: \"art\" }\n              name: { eq: \"miyajima_temple\" }\n            ) {\n              childImageSharp {\n                fluid(maxWidth: 2048) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            articles: allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\n              edges {\n                node {\n                  id\n                  frontmatter {\n                    date(formatString: \"MMMM DD, YYYY\")\n                    slug\n                    series\n                    title\n                    tags\n                    published\n                    excerpt\n                    reading_time\n                    cover_image\n                  }\n                }\n              }\n            }\n            articleImages: allFile(filter: {sourceInstanceName: {eq: \"article_images\"}}) {\n              edges {\n                node {\n                  childImageSharp {\n                    fluid(maxWidth: 1200) {\n                      originalName\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n            seriesImages: allFile(filter: {sourceInstanceName: {eq: \"series_images\"}}) {\n              edges {\n                node {\n                  childImageSharp {\n                    fluid(maxWidth: 800) {\n                      originalName\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={queryResult => {\n          const mdArticles = queryResult.articles.edges\n            .filter(article => this.isArticlePublished(article))\n\n          const reducer = (accumulator, currentValue) => {\n            currentValue.forEach((tag) => this.addToTagList(tag, accumulator));\n            return accumulator\n          }\n\n          const seriesReducer = (accumulator, currentValue) => {\n            if (!!currentValue) {\n              this.addToSeriesList(currentValue.node.frontmatter.series, accumulator);\n            }\n            return accumulator\n          }\n\n          const coverImages = queryResult.articleImages.edges\n          const seriesImages = queryResult.seriesImages.edges\n\n          let Posts = <div style={{marginTop: '1em'}}>No posts. Watch this space!</div>;\n          let Tags = <div style={{marginTop: '1em'}}>No tags yet.</div>;\n          let Series = <div style={{display: 'none'}}></div>;\n\n          if (!!mdArticles && mdArticles.length > 0) {\n            Posts = mdArticles\n              .filter(\n                article =>\n                this.articleIsTagged(\n                  this.state.selectedTag,\n                  article,\n                ) || this.articleIsInSeries(\n                  this.state.selectedSeries,\n                  article,\n                )\n              )\n              .map(\n                article =>\n                <PostLink\n                  key={article.node.id}\n                  post={article.node}\n                  coverImage={\n                    this.getCoverImage(\n                      coverImages,\n                      article.node.frontmatter.cover_image,\n                    )\n                  }\n                />\n              )\n\n            Series = mdArticles\n              .reduce(seriesReducer, [])\n              .map(\n                series =>\n                !!seriesData[series] ?\n                  <SeriesCard\n                    className={\n                      this.state.selectedSeries === series ? 'selelcted-series-card': null\n                    }\n                    key={series}\n                    onClick={() => this.selectSeries(series)}\n                  >\n                    <h3 className=\"seriescard-heading\">series</h3>\n                    <h2>{series}</h2>\n                    {\n                      this.getCoverImage(\n                        seriesImages,\n                        seriesData[series].imageName,\n                      ) !== null &&\n                        <Img\n                          key={series}\n                          className=\"series-image\"\n                          fluid={\n                            this.getCoverImage(\n                              seriesImages,\n                              seriesData[series].imageName,\n                            ).childImageSharp.fluid\n                          }\n                        />\n                    }\n                    <div className=\"series-description\">\n                      <p>{seriesData[series].description}</p>\n                    </div>\n                  </SeriesCard> : null\n              )\n\n            Tags = mdArticles\n              .map(\n                article => article.node.frontmatter.tags.split(' ')\n              )\n              .reduce(\n                reducer, mdArticles ? ['All articles'] : ['No tags yet.']\n              )\n              .map(\n                tag =>\n                <TagButton\n                  className={\n                    this.state.selectedTag === tag ? 'selelcted-tag-button' : null\n                  }\n                  key={tag}\n                  onClick={() => this.selectTag(tag)} > {tag}\n                </TagButton>\n              )\n          }\n\n          return (\n          <Layout>\n            <Navbar isAtTopOfPage={true} />\n            <HeroImage>\n              <HeroOverlay></HeroOverlay>\n              <Img fluid={queryResult.stefan_img.childImageSharp.fluid} />\n            </HeroImage>\n            <Container>\n              <MainMatter>\n                <h1>Articles</h1>\n\n                <p>filter by topic:</p>\n                <TagsButtonContainer>{Tags}</TagsButtonContainer>\n\n                { (!!Series && !!seriesData && Object.keys(seriesData).length !== 0) && <p>or by series:</p> }\n                <SeriesContainer>{Series}</SeriesContainer>\n\n                <PostsContainer>{Posts}</PostsContainer>\n              </MainMatter>\n            </Container>\n            <Footer bottomImage={false}/>\n          </Layout>\n          )\n        }}\n      />\n    )\n  }\n}\n\n// const seriesData = {\n//   \"Cybersecurity\": {\n//     \"imageName\": \"cybersecurity.jpeg\",\n//     \"description\": \"Cybersecurity is the study of the security of digital systems and networks. It is the study of the threats and vulnerabilities that exist in these systems and networks.\",\n//   },\n//   \"Design Patterns\": {\n//     \"imageName\": \"design-patterns.jpeg\",\n//     \"description\": \"Design patterns are a family of recurring design patterns, which are used in software design. They are a way to express design as code.\",\n//   },\n//   \"git good at git\": {\n//     \"imageName\": \"git-branch.jpg\",\n//     \"description\": \"git is a version control system for tracking changes in source code during software development. It is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.\",\n//   }\n// }\n\n\nconst seriesData = {}\n\nconst HeroOverlay = styled.div`\n  width: 100%;\n  min-height: 100%;\n  position: absolute;\n\n  z-index: 1;\n  background: black;\n  background: linear-gradient(\n    11deg,\n    rgb(247 247 247) 23%,\n    #dd99ff69 76%,\n    #ff006685 96% );\n`\n\nconst HeroImage = styled.div`\n  z-index: -1;\n  width: 100%;\n  position: absolute;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-top: 72px;\n`\n\nconst SeriesContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n\n  .selelcted-series-card {\n    background: linear-gradient( 155deg,rgb(158 14 255 / 5%) 0%,rgb(0 20 255 / 12%) 20%,rgb(255 158 221 / 52%) 29%,rgb(85 85 255 / 81%) 100% );\n    .series-description {\n      backdrop-filter: brightness(130%) blur(14px);\n    }\n  }\n`\n\nconst SeriesCard = styled.div`\n  min-height: 12em;\n  min-width: 14em;\n\n  @media (max-width: 620px) {\n    width: 50%;\n  }\n  width: 40%;\n  @media (min-width: 900px) {\n    width: 20%;\n  }\n\n  border-radius: 12px;\n  padding: 20px;\n  background-color: #FFFFFF;\n  box-shadow: 0 3px 6px 0 rgba(3, 14, 45, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  margin: 20px 30px 20px 0px;\n  font-weight: bold;\n  cursor: pointer;\n\n  p { font-size: 1em !important; }\n  h2 { font-size: 1.4em; font-weight: 600; }\n\n  .series-image {\n    width: 100%;\n    border-radius: 3px;\n  }\n\n  .seriescard-heading {\n    font-size: 12px;\n    color: rgb(163 163 163);\n  }\n\n  .series-description {\n    position: relative;\n    border-radius: 10px;\n    padding: 12px;\n    -webkit-transform: skewY(6deg);\n    -ms-transform: skewY(6deg);\n    -webkit-transform: skewY(6deg);\n    -ms-transform: skewY(6deg);\n    transform: skewY(6deg);\n    border: 1px solid rgb(95 109 255 / 20%);\n    x-shadow: 7px 13px 20px 0pxrgb(255 183 213 / 62%);\n    -webkit-backdrop-filter: hue-rotate(312deg) blur(14px);\n    -webkit-backdrop-filter: hue-rotate(312deg) blur(14px);\n    backdrop-filter: hue-rotate(145deg) blur(14px);\n    -webkit-backdrop-filter: hue-rotate(312deg) blur(14px);\n    top: -50px;\n    background-color: rgb(255 255 255 / 54%);\n\n    p {\n      margin: 0;\n      font-weight: 400;\n      color: rgb(32 29 38);\n    }\n  }\n`\n\nconst TagsButtonContainer = styled.div`\n  margin-top: 1em;\n`\n\nconst PostsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 1em;\n  margin-bottom: 1em;\n`\n\nconst TagButton = styled.button`\n  animation-delay: 0s;\n  animation: animatetext 1s;\n  animation-fill-mode: forwards;\n\n  background-color: #2f39ae;\n  border-radius: 100px;\n  padding: 11px;\n  color: white;\n  margin: 3px;\n  box-shadow: -4px 5px 8px 0px #2f39ae75;\n\n  @keyframes animatetext {\n    0% { transform: translate3d(0, 10%, 0); opacity: 0%;}\n    100% { transform: translate3d(0, 0, 0); opacity: 100%;}\n  }\n`\n\nconst MainMatter = styled.div`\n  padding-top: 10em;\n  padding-bottom: 10em;\n  min-height: 100vh;\n\n  @keyframes animatetext {\n    0% { transform: translate3d(0, 10%, 0); opacity: 0%;}\n    100% { transform: translate3d(0, 0, 0); opacity: 100%;}\n  }\n\n  @media (max-width: ${props => props.theme.screen.md}) {\n    padding-top: 10em;\n    grid-template-columns: 1fr;\n    text-align: left;\n  }\n\n  h1 {\n    line-height: 1.3328;\n    font-size: clamp(4.6rem, 12vw - 1.5rem, 6.5rem);\n\n    animation-delay: 0s;\n    animation: animatetext 1s;\n    animation-fill-mode: forwards;\n  }\n\n  h3 {\n    line-height: 1.3328;\n    font-size: clamp(2.0rem, 12vw - 1.5rem, 1.8rem);\n\n    animation-delay: 1s;\n    animation: animatetext 2s;\n    animation-fill-mode: forwards;\n  }\n\n  p {\n    font-size: clamp(1.6rem, 12vw - 1.5rem, 2.0rem);\n    overflow-wrap: break-word;\n    -webkit-font-smoothing: antialiased;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 300;\n    font-style: normal;\n    letter-spacing: -.02em;\n    text-transform: none;\n    line-height: 1.3328;\n    margin-top: 2em;\n    margin-bottom: 0;\n    white-space: pre-wrap;\n    margin-top: 1em;\n\n    animation-delay: 2s;\n    animation: animatetext 2s;\n    animation-fill-mode: forwards;\n  }\n\n  div::-webkit-scrollbar {\n    width: 1px;\n    height: 6px;\n  }\n\n  div::-webkit-scrollbar-track {\n    background: none;\n  }\n\n  div::-webkit-scrollbar-thumb {\n    background-color: darkgrey;\n    border-radius: 20px;\n  }\n`;\n\nexport default Articles;\n"],"sourceRoot":""}